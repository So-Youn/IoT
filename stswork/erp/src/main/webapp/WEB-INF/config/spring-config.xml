<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 리소스를 연결하는 부분 -->
	<resources mapping="/images/**"
		location="/WEB-INF/static/images/" />
	<resources mapping="/common/**"
		location="/WEB-INF/static/common/" />


	
	<!-- 1.Connection 관리를 담당하는 객 체 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" /> 	<!-- view를 꼭 없애 줄 것 -->
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	<!-- ==============================tiles=========================== -->
	<beans:bean id="tilesconfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value> <!-- **는 어느 파일이든지 다 해당된다는 의미 -->
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- ===================================================================== -->
	<!-- ==============================my batis 사용=========================== -->
	<!-- 1.Connection 관리를 담당하는 객 체 -->
	<beans:bean id="ds"
				class="org.springframework.jndi.JndiObjectFactoryBean">
				<beans:property name="jndiName" value="jdbc/myspring"/>
				<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	<!--  2.spring에서 mybatis의 핵심클래스인 sqlSession을 사용할 수 있도록 하기 위해 생성-->
	<beans:bean id="SqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>		
		<beans:property name="configLocation"
			value="/WEB-INF/config/mybatis-config.xml"/>	
	</beans:bean>
	<!-- 3. mybatis의 핵심클래스를 등록 -->
	<beans:bean
		class="org.mybatis.spring.SqlSessionTemplate">
			<beans:constructor-arg ref="SqlSessionFactory"/>
		</beans:bean>						
	<!-- ===================================================================== -->
	<context:component-scan base-package="multi" />
	<context:component-scan base-package="main" />



</beans:beans>
